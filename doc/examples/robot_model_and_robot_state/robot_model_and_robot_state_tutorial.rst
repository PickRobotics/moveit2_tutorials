Robot Model and Robot State
===========================

.. image:: panda_tf.png
   :width: 700px
   :alt: "That is a sweet robot" you might say.

이 섹션에서는 MoveIt에서 C++ API을 통해서 kinematics을 사용하는 방법을 설명합니다.

The RobotModel and RobotState Classes
-------------------------------------
:moveit_core: 네임스페이스의 :moveit_codedir:`RobotModel<moveit_core/robot_model/include/moveit/robot_model/robot_model.h>` 클래스와 :moveit_codedir:`RobotState<moveit_core/robot_state/include/moveit/robot_state/robot_state.h>` 클래스는 로봇의 운동학에 접근할 수 있는 핵심 클래스들입니다.

:moveit_codedir:`RobotModel<moveit_core/robot_model/include/moveit/robot_model/robot_model.h>`클래스는 URDF 파일에서 모든 로봇의 links와 joints 사이의 관계를 포함하고 각 조인트의 제약 값 속성들도 포함되며 URDF에서 로딩된다. 또한 RobotModel 클래스는 SRDF 파일에서 정의된 로봇의 links와 joints를 planning groups으로 분리합니다. URDF와 SRDF에 대한 자세한 내용은 다음 문서에서 확인하실 수 있습니다. :doc:`URDF and SRDF Tutorial </doc/examples/urdf_srdf/urdf_srdf_tutorial>`

:moveit_codedir:`RobotState<moveit_core/robot_state/include/moveit/robot_state/robot_state.h>` 클래스는 특정 시점에서 로봇의 정보를 담고 있으며, joint 위치의 벡터(선택적으로 속도 및 가속도)를 저장합니다. 이 정보는 end-effector의 야코비안 행렬과 같이 로봇의 현재 상태에 따라 변하는 운동학 정보를 얻는 데 사용할 수 있습니다.

또한 RobotState 클래스는 end-effector 위치 (카테시안 좌표계)를 기반으로 로봇 팔의 위치를 설정하고 카테시안 경로를 계산하는데 필요한 함수들을 제공합니다.

이 예제에서는 Panda를 사용하여 이 클래스들을 사용하는 과정을 소개합니다.

Getting Started
---------------
아직 완료하지 않았다면 :doc:`Getting Started </doc/tutorials/getting_started/getting_started>` 튜토리얼의 단계를 먼저 완료하세요.

Running the Code
----------------
이 튜터리얼내에 있는 모든 코드는 여러분이 가지고 있는 ``moveit2_tutorials`` 패키지에서 컴파일 및 실행할 수 있습니다.

moveit2_tutorials에서 코드를 직접 실행하려면 launch 파일을 roslaunch 하세요::

 ros2 launch moveit2_tutorials robot_model_and_robot_state_tutorial.launch.py

Expected Output
---------------
예상 출력은 다음과 같은 형식입니다. 임의의 joint 값들을 사용하기 때문에 숫자는 일치하지 않을 수 있습니다.: ::


 ... [robot_model_and_state_tutorial]: Model frame: world
 ... [robot_model_and_state_tutorial]: Joint panda_joint1: 0.000000
 ... [robot_model_and_state_tutorial]: Joint panda_joint2: 0.000000
 ... [robot_model_and_state_tutorial]: Joint panda_joint3: 0.000000
 ... [robot_model_and_state_tutorial]: Joint panda_joint4: 0.000000
 ... [robot_model_and_state_tutorial]: Joint panda_joint5: 0.000000
 ... [robot_model_and_state_tutorial]: Joint panda_joint6: 0.000000
 ... [robot_model_and_state_tutorial]: Joint panda_joint7: 0.000000
 ... [robot_model_and_state_tutorial]: Current state is not valid
 ... [robot_model_and_state_tutorial]: Current state is valid
 ... [robot_model_and_state_tutorial]: Translation:
 -0.368232
 0.645742
 0.752193

 ... [robot_model_and_state_tutorial]: Rotation:
  0.362374 -0.925408  -0.11093
  0.911735  0.327259  0.248275
  -0.193453 -0.191108  0.962317

 ... [robot_model_and_state_tutorial]: Joint panda_joint1: 2.263889
 ... [robot_model_and_state_tutorial]: Joint panda_joint2: 1.004608
 ... [robot_model_and_state_tutorial]: Joint panda_joint3: -1.125652
 ... [robot_model_and_state_tutorial]: Joint panda_joint4: -0.278822
 ... [robot_model_and_state_tutorial]: Joint panda_joint5: -2.150242
 ... [robot_model_and_state_tutorial]: Joint panda_joint6: 2.274891
 ... [robot_model_and_state_tutorial]: Joint panda_joint7: -0.774846
 ... [robot_model_and_state_tutorial]: Jacobian:
   -0.645742     -0.26783   -0.0742358    -0.315413    0.0224927    -0.031807 -2.77556e-17
   -0.368232     0.322474    0.0285092    -0.364197   0.00993438     0.072356  2.77556e-17
           0    -0.732023    -0.109128     0.218716   2.9777e-05     -0.11378 -1.04083e-17
           0    -0.769274    -0.539217     0.640569     -0.36792     -0.91475     -0.11093
           0    -0.638919      0.64923   -0.0973283     0.831769     -0.40402     0.248275
           1  4.89664e-12     0.536419     0.761708     0.415688  -0.00121099     0.962317


**Note:** 출력물이 다른 ROS 콘솔 형식이더라도 걱정하지 마세요.

The Entire Code
---------------
The entire code can be seen :codedir:`here in the MoveIt GitHub project<examples/robot_model_and_robot_state/src/robot_model_and_robot_state_tutorial.cpp>`.

.. tutorial-formatter:: ./src/robot_model_and_robot_state_tutorial.cpp

The Launch File
^^^^^^^^^^^^^^^
To run the code, you will need a launch file that does two things:
 * Loads the Panda URDF and SRDF onto the parameter server, and
 * Puts the kinematics_solver configuration generated by the MoveIt Setup Assistant onto the ROS parameter server in the namespace of the node that instantiates the classes in this tutorial.

.. literalinclude:: ./launch/robot_model_and_robot_state_tutorial.launch.py
